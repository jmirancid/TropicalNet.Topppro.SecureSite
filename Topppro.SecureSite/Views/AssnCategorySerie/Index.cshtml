@using Topppro.SecureSite.Models;

@model IEnumerable<Topppro.Entities.Assn_CategorySerie>

@{
    ViewBag.Title = "Index";
    ViewBag.CurrentMenu = Menu_Enum.Associations;
}

@section Styles {
    <link href="@Url.Content("~/css/custom-list.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Scripts/old/bootstrap-dialog/bootstrap-dialog.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/css/themes/base/jquery-ui-1.10.4.min.css")" rel="stylesheet" type="text/css" />
    <style type="text/css">
        .modal-backdrop {
            z-index: -1 !important;
        }

        .ui-state-highlight {
            border-style: dashed;
        }

        .ui-state-active {
            padding: 2px;
            margin-bottom: 5px;
        }

        .clickable {
            cursor: pointer;
        }

        .panel-heading span {
            margin-top: -20px;
            font-size: 15px;
        }
    </style>
}

@section Title {
    <h2>Index</h2>
    <h5>Category / Serie</h5>
    <hr />
}

<div class="row">
    <div class="col-md-3 col-sm-3">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Serie</h3>
            </div>
            <div class="panel-body">
                <ul class="draggable list-unstyled">
                    @foreach (Topppro.Entities.Serie serie in ViewBag.Series)
                    {
                        <li class="ui-state-active" data-id="@serie.Id">@serie.Name</li>
                    }
                </ul>
            </div>
        </div>
    </div>
    <div class="col-md-9 col-sm-9">
        <div class="row">
            @foreach (Topppro.Entities.Category category in ViewBag.Categories)
            {
                <div class="col-md-6 col-sm-6">
                    <div class="panel panel-primary">
                        <div class="panel-heading">
                            <h3 class="panel-title">@category.Name</h3>
                            <span class="pull-right clickable"><i class="glyphicon glyphicon-chevron-up"></i></span>
                        </div>
                        <div class="panel-body">
                            <ol class="sortable" data-id="@category.Id">
                                @foreach (var assn in Model.Where(e => e.CategoryId == category.CategoryId).OrderBy(e => e.Priority))
                                {
                                    @Html.Partial("_Render", assn)
                                }
                            </ol>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="@Url.Content("~/Scripts/old/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/old/bootstrap-dialog/bootstrap-dialog.min.js")" type="text/javascript"></script>
    @Html.Partial("_Validator")

    <script type="text/javascript">

        var el;

        $.ajaxSetup({ async: false });

        $(document).ajaxError(function (event, xhr, settings, error) {
            alert(xhr.statusText);
        });

        $(function () {
            $('.draggable > li').draggable({
                revert: 'invalid',
                connectToSortable: '.sortable',
                helper: 'clone'
            });

            $('.sortable').sortable({
                forceHelperSize: true,
                forcePlaceholderSize: true,
                placeholder: 'ui-state-highlight',
                receive: function (event, ui) {

                    var el =
                        $(this).data().uiSortable.currentItem;

                    $.post(
                        '@Url.Action("Insert")',
                        { categoryId: el.parent().data('id'), serieId: el.data('id'), priority: $(this).data('ui-sortable').currentItem.index() + 1 },
                        function (data, status, xhr) {
                            el.replaceWith(data);
                            el.addClass('new');
                        });

                    return true;
                },
                update: function (event, ui) {
                    if (!ui.item.hasClass('new')) {
                        $.post('@Url.Action("Reorder")', { id: $(ui.item).data('id'), priority: ui.item.index() + 1 });
                    }
                    ui.item.removeClass();
                }
            }).disableSelection();

            $(document).on('click', '.panel-heading span.clickable', function (event) {

                var el = $(this);

                if (!el.hasClass('panel-collapsed')) {
                    el.parents('.panel').find('.panel-body').slideUp();
                    el.addClass('panel-collapsed');
                    el.find('i').removeClass('glyphicon-chevron-up').addClass('glyphicon-chevron-down');
                } else {
                    el.parents('.panel').find('.panel-body').slideDown();
                    el.removeClass('panel-collapsed');
                    el.find('i').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
                }
            })

            $(document).on('click', 'a.editor-dialog', function (e) {
                e.preventDefault();

                var obj =
                    $(this);

                el =
                    $(this).parents('ol > li');

                BootstrapDialog.show({
                    type: obj.attr('type'),
                    title: obj.attr('title'),
                    message: function (dialog) {
                        var content =
                            $('<div></div>').load(obj.attr('href'));

                        return content;
                    },
                    buttons: [{
                        label: 'Close',
                        cssClass: 'btn-default',
                        action: function (dialog) {
                            dialog.close();
                        }
                    }, {
                        label: 'Save',
                        cssClass: 'btn-primary',
                        action: function (dialog) {

                            var button =
                                this;

                            var form =
                                dialog.getModalBody().find('form');

                            if (form.valid()) {
                                button.disable();
                                button.spin();

                                form.submit();
                            }
                        }
                    }],
                    onshown: function (dialog) {

                        var form =
                            dialog.getModalBody().find('form');

                        $.validator.unobtrusive.parse(form);
                    }
                });
            })

        });
    </script>
}
